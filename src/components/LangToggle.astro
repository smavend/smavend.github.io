---
import { t } from "i18next"
import SystemIcon from "./icons/System.astro"
import SpanishIcon from "./icons/Spanish.astro"
import EnglishIcon from "./icons/English.astro"

const LANGUAGES = t("lang-toggle.options", { returnObjects: true })
---

<div class="relative ml-1 mr-1">
	<button
		transition:persist
		id="lang-toggle-btn"
		class="appearance-none border-none flex hover:scale-125 transition">
		<span class="sr-only">{t("lang-toggle.lang")}</span>
		<SpanishIcon id="es" class="lang-toggle-icon size-5 transition-all" />
		<EnglishIcon id="en" class="lang-toggle-icon absolute size-5 transition-all" />
		<!--SystemIcon id="system" class="lang-toggle-icon absolute size-5 transition-all" /-->
	</button>
	<div
		transition:persist
		id="langs-menu"
		class="absolute hidden scale-80 top-8 right-0 text-sm p-1 min-w-[8rem] rounded-md border border-gray-100 bg-white/90 dark:bg-gray-900/90 dark:border-gray-500/20 shadow-[0_3px_10px_rgb(0,0,0,0.2)] backdrop-blur-md">
		<ul>
			{
				LANGUAGES.map(({ text, lang }) => (
					<>
						<li class="flex">
							<a
								class="w-full langs-menu-option px-2 py-1.5 cursor-default hover:bg-neutral-400/40 dark:hover:bg-gray-500/50 rounded-sm"
								data-lang={lang}
								href={lang === "es" ? `/` : `/${lang}/`}>
								{text}
							</a>
						</li>
					</>
				))
			}
		</ul>
	</div>
</div>

<style>
	#langs-menu.open {
		display: inline;
		animation: scale-up-center 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
	}

	@keyframes scale-up-center {
		from {
			transform: scale(0.8);
			opacity: 0;
		}

		to {
			transform: scale(1);
			opacity: 1;
		}
	}
</style>

<script is:inline>
	const langsMenu = document.getElementById("langs-menu")

	document.addEventListener("click", () => langsMenu.classList.remove("open"))

	document.getElementById("lang-toggle-btn").addEventListener("click", (e) => {
		e.stopPropagation()
		const isClosed = !langsMenu.classList.contains("open")
		langsMenu.classList[isClosed ? "add" : "remove"]("open")
	})
</script>
