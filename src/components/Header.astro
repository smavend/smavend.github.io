---
const navItems = [
	
	{
		title: "Experiencia",
		label: "experience",
		url: "/#experience",
	},
	{
		title: "Proyectos",
		label: "projects",
		url: "/#projects",
	},
	{
		title: "Sobre m√≠",
		label: "about",
		url: "/#about",
	},
	{
		title: "Contacto",
		label: "contact",
		url: "/#contact",
	},
]
---

<header
	class={`
    fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2
  `}>
	<nav
		class={`
		flex px-3 text-sm font-medium text-gray-800 rounded-full shadow-lg
		bg-white/90 shadow-gray-800/5 ring-1 ring-gray-900/5
		backdrop-blur dark:bg-gray-800/60 dark:text-gray-200
		dark:ring-white/10
		`}>
		{
			navItems.map((link) => (
				<a
					class="relative block px-2 py-2 transition hover:text-yellow-500 dark:hover:text-yellow-400"
					aria-label={link.label}
					href={link.url}>
					{link.title}
				</a>
			))
		}
	</nav>
</header>

<script>
	document.addEventListener("astro:page-load", () => {
		const sections = document.querySelectorAll("section")
		const navItems = document.querySelectorAll("header nav a")

		const callback = (entries: any[]) => {
			entries.forEach((entry) => {
				if (entry.isIntersecting) {
					navItems.forEach((item) => {
						if (item.getAttribute("aria-label") == entry.target.id) {
							item.classList.add("text-yellow-500")
						} else {
							item.classList.remove("text-yellow-500")
						}
					})
				}
			})
		}

		const observer = new IntersectionObserver(callback, {
			root: null,
			rootMargin: "0px",
			threshold: 0.3,
		})

		sections.forEach((section) => {
			observer.observe(section)
		})

		// Cleanup function
		window.onunload = () => {
			observer.disconnect()
		}
	})
</script>

<style>
	nav {
		animation: nav-shadown 1s linear both;
		animation-timeline: scroll();
		animation-range: 0 400px;
	}
	@keyframes nav-shadown {
		to {
			@apply shadow-xl;
		}
	}
</style>
